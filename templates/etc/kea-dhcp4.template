// ******************************************************************
// Cobbler managed kea-dhcp4.conf file
// generated from cobbler kea-dhcp4.conf template ($date)
// Do NOT make changes to /etc/kea/kea-dhcp4.conf. Instead, make your changes
// in /etc/cobbler/kea-dhcp4.template, as /etc/kea/kea-dhcp4.conf will be
// overwritten.
// ******************************************************************
{
    "Dhcp4": {
        "valid-lifetime": 4000,
        "renew-timer": 1000,
        "rebind-timer": 2000,
        "interfaces-config": {
            // interface name (e.g. "eth0" or specific IPv4 address on that
            // interface name (e.g. "eth0/192.168.1.1").
            "interfaces": [ "*" ]
        },
        "lease-database": {
            "type": "memfile",
            "persist": true,
            "name": "/var/lib/kea/dhcp4.leases"
        },
        "subnet4": [
            {
                "id": 1,
                "subnet": "192.168.1.0/24",
                "interfaces": [ "*" ],
                "option-data": [
                    {
                        "name": "routers",
                        "data": "192.168.1.5"
                    },
                    {
                        "name": "domain-name-servers",
                        "data": "192.168.1.1"
                    },
                    {
                        "name": "subnet-mask",
                        "data": "255.255.255.0"
                    }
                ],
                "pools": [
                    {
                        "pool": "192.168.1.100 - 192.168.1.254"
                    }
                ],
                "valid-lifetime": 21600,
                "max-valid-lifetime": 43200,
                "next-server": "$next_server_v4"
            }
        ],
        // Default boot-file-name
        "boot-file-name": "grub/grub.0",

        "client-classes": [
            {
                "name": "Legacy",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00000'",
                "boot-file-name": "grub/grub.0"
            },
            {
                "name": "UEFI-32-1",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00006'",
                "boot-file-name": "unsupported"
            },
            {
                "name": "UEFI-32-2",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00002'",
                "boot-file-name": "unsupported"
            },
            {
                "name": "UEFI-64-1",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00007'",
                "boot-file-name": "grub/grubx64.efi"
            },
            {
                "name": "UEFI-64-2",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00008'",
                "boot-file-name": "grub/grubx64.efi"
            },
            {
                "name": "UEFI-64-3",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00009'",
                "boot-file-name": "grub/grubx64.efi"
            },
            {
                "name": "armv7",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:0000a'",
                "boot-file-name": "grub/armv7.efi"
            },
            {
                "name": "aarch64",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:0000b'",
                "boot-file-name": "grub/grubaa64.efi"
            },
            {
                "name": "RiskV32-1",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00025'",
                "boot-file-name": "unsupported"
            },
            {
                "name": "RiskV32-2",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:00027'",
                "boot-file-name": "unsupported"
            },
            {
                "name": "PPC64le",
                "test": "substring(option[60].hex,0,20) == 'PXEClient:Arch:0000e'",
                "boot-file-name": "grub/grub.ppc64le"
            }
        ],
        "host-reservation-identifiers": [
            "hw-address"
        ],
        // TODO check
        "reservation-mode": "global",
        "reservations": [
            #for dhcp_tag in $dhcp_tags.keys():
            #for mac in $dhcp_tags[$dhcp_tag].keys():
            #set iface = $dhcp_tags[$dhcp_tag][$mac]
            {
                "hostname": "$iface.name",
                "hw-address": "$mac",
                #if $iface.ip_address:
                "ip-address": "iface.ip_address",
                #end if
                #if $iface.next_server_v4:
                "next-server": "$iface.next_server_v4",
                #end if
                #if $iface.filename:
                "boot-file-name": "$iface.filename",
                #end if
                "option-data": [
                    #if $iface.dns_name:
                    {
                        "name": "host-name",
                        "data": "$iface.dns_name"
                    },
                    #else if $iface.hostname:
                    {
                        "name": "host-name",
                        "data": "$iface.hostname"
                    },
                    #end if
                    #if $iface.netmask:
                    {
                        "name": "subnet-mask",
                        "data": "$iface.netmask"
                    },
                    #end if
                    #if $iface.if_gateway:
                    {
                        "name": "routers",
                        "data": "$iface.if_gateway"
                    },
                    #else if $iface.gateway:
                    {
                        "name": "routers",
                        "data": "$iface.gateway"
                    },
                    #end if
                    #if $iface.name_servers:
                        #set $mynameservers = ', '.join($iface.name_servers)
                    {
                        "name": "domain-name-servers",
                        "data": "$mynameservers"
                    },
                    #end if
                ],
            },
            #end for
            #end for
        ]
    }
}
